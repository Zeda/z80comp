[
    {
        "bytecode": "DF",
        "code": "->",
        "name": "\\~",
        "numargs": 2,
        "precedence": 1,
        "sizescore": 0,
        "speedscore": 0,
        "type": "binop"
    },
    {
        "bytecode": "D9",
        "code": " pop de\r\n pop hl\r\n or a\r\n sbc hl,de\r\n jr z,$+3\r\n scf\r\n sbc hl,hl\r\n inc hl\r\n push hl",
        "name": "=",
        "numargs": 2,
        "precedence": 50,
        "sizescore": 0,
        "speedscore": 0,
        "type": "binop"
    },
    {
        "bytecode": "D8",
        "code": " pop de \\ pop hl \\ ld a,h \\ or d \\ ld h,a \\ ld a,l \\ or e \\ ld l,a \\ push hl",
        "name": "|",
        "numargs": 2,
        "precedence": 60,
        "sizescore": 0,
        "speedscore": 0,
        "type": "binop"
    },
    {
        "bytecode": "D6",
        "code": " pop de \\ pop hl \\ ld a,h \\ and d \\ ld h,a \\ ld a,l \\ and e \\ ld l,a \\ push hl",
        "name": "&",
        "numargs": 2,
        "precedence": 70,
        "sizescore": 0,
        "speedscore": 0,
        "type": "binop"
    },
    {
        "bytecode": "D2",
        "code": " pop de \\ pop hl \\ or a \\ sbc hl,de \\ push hl",
        "name": "-",
        "numargs": 2,
        "precedence": 81,
        "sizescore": 0,
        "speedscore": 0,
        "type": "binop"
    },
    {
        "bytecode": "D1",
        "code": " pop de \\ pop hl \\ add hl,de \\ push hl",
        "name": "+",
        "numargs": 2,
        "precedence": 80,
        "sizescore": 0,
        "speedscore": 0,
        "type": "binop"
    },
    {
        "bytecode": "D4",
        "code": " pop de \\ pop hl \\ call divHLDE \\ push hl",
        "name": "/",
        "numargs": 2,
        "precedence": 83,
        "sizescore": 0,
        "speedscore": 0,
        "type": "binop"
    },
    {
        "bytecode": "D3",
        "code": " pop de \\ pop hl \\ call mulHLDE \\ push hl",
        "name": "*",
        "numargs": 2,
        "precedence": 82,
        "sizescore": 0,
        "speedscore": 0,
        "type": "binop"
    },
    {
        "bytecode": "D5",
        "code": " pop de \\ pop hl \\ ld a,h \\ xor d \\ ld h,a \\ ld a,l \\ xor e \\ ld l,a \\ push hl",
        "name": "^",
        "numargs": 2,
        "precedence": 72,
        "sizescore": 0,
        "speedscore": 0,
        "type": "binop"
    },
    {
        "bytecode": "20",
        "code": " pop hl \\ call func_Disp",
        "name": "Disp",
        "numargs": 1,
        "precedence": 0,
        "sizescore": 0,
        "speedscore": 0,
        "type": "func"
    },
    {
        "bytecode": "63",
        "code": " pop hl \\ call func_sin \\ push hl",
        "name": "sin",
        "numargs": 1,
        "precedence": 0,
        "sizescore": 0,
        "speedscore": 0,
        "type": "func"
    },
    {
        "bytecode": "64",
        "code": " pop hl \\ call func_cos \\ push hl",
        "name": "cos",
        "numargs": 1,
        "precedence": 0,
        "sizescore": 0,
        "speedscore": 0,
        "type": "func"
    },
    {
        "bytecode": "",
        "code": "pop hl \\ inc hl \\ push hl",
        "name": "++",
        "numargs": 1,
        "precedence": 0,
        "sizescore": 0,
        "speedscore": 0,
        "type": "unop"
    },
    {
        "bytecode": "",
        "code": "pop hl \\ pop bc \\ add hl,hl \\ dec bc \\ ld a,b \\ or c \\ jr nz,$-4 \\ push hl",
        "name": "<<",
        "numargs": 2,
        "precedence": 83,
        "sizescore": 0,
        "speedscore": 0,
        "type": "binop"
    },
    {
        "bytecode": "",
        "code": "",
        "name": "GotoIf",
        "numargs": 2,
        "precedence": 0,
        "sizescore": 0,
        "speedscore": 0,
        "type": "func"
    },
    {
        "bytecode": "",
        "code": "",
        "name": "!=",
        "numargs": 2,
        "precedence": 50,
        "sizescore": 0,
        "speedscore": 0,
        "type": "binop"
    },
    {
        "bytecode": "",
        "code": "",
        "name": "Sprite8",
        "numargs": 4,
        "precedence": 0,
        "sizescore": 0,
        "speedscore": 0,
        "type": "func"
    },
    {
        "bytecode": "",
        "code": "",
        "name": "UpdateLCD",
        "numargs": 0,
        "precedence": 0,
        "sizescore": 0,
        "speedscore": 0,
        "type": "func"
    },
    {
        "bytecode": "",
        "code": "",
        "name": "GetGBuf",
        "numargs": 0,
        "precedence": 0,
        "sizescore": 0,
        "speedscore": 0,
        "type": "func"
    },
    {
        "bytecode": "",
        "code": "",
        "name": "SetGBuf",
        "numargs": 1,
        "precedence": 0,
        "sizescore": 0,
        "speedscore": 0,
        "type": "func"
    },
    {
        "bytecode": "",
        "code": "",
        "name": "--",
        "numargs": 1,
        "precedence": 0,
        "sizescore": 0,
        "speedscore": 0,
        "type": "unop"
    }
]
